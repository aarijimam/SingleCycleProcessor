
    ROM[0] = 32'b 000000 00000 00001 00010 00000 100000;   
    ROM[1] = 32'b 000000 00011 00100 00101 00000 100010;
    ROM[2] = 32'b 000000 00100 00100 00010 00111 000000;
    ROM[3] = 32'b 000000 00110 00100 00011 00000 000000;
    ROM[4] = 32'b 000000 00000 00000 00101 00001 000000;
    ROM[5] = 32'b 000100 00110 00100 00010 00001 000000;
    ROM[6] = 32'b 000000 00110 00100 00010 00000 000000;
    ROM[7] = 32'b 000000 00100 00000 00001 00001 000000;
    ROM[8] = 32'b 000001 00100 00101 00000 00000 000000;
    ROM[9] = 32'b 000001 00100 00101 00000 00000 000000;
    ROM[10] = 32'b 000001 00100 00101 00000 00000 000000;
    ROM[11] = 32'b 000100 00000 00101 00001 00110 000000;
    ROM[12] = 32'b 000001 00100 00101 00000 00000 000000;
    ROM[13] = 32'b 001100 00000 00101 00000 00001 000000;
    ROM[14] = 32'b 000000 00001 00110 00110 00111 000000;
    ROM[15] = 32'b 000001 00100 00101 00000 00000 000000;
//                 funct  shamt  rd    rt    rs   opcode  

ROM[0] = 32'b 00000000000000010001000000100000;   
ROM[1] = 32'b 00000000011001000010100000100010;